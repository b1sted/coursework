# Copyright (c) 2025 Nikita Mandrykin
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: build # Имя рабочего процесса (workflow), отображается в GitHub Actions

on: # События, которые будут запускать этот workflow
  push:
    branches: [ main ] # Запуск при push в ветку 'main'
  pull_request:
    branches: [ main ] # Запуск при создании Pull Request, нацеленного на ветку 'main'

jobs: # Список "работ" или задач (jobs), которые будут выполняться
  build: # Имя этой конкретной работы. Можно назвать как угодно (например, compile-project)
    runs-on: ubuntu-latest # Указываем, на каком типе виртуальной машины запускать эту работу (здесь - последняя версия Ubuntu)

    steps: # Последовательность шагов, которые будут выполнены внутри работы 'build'
      # Шаг 1: Клонирование (checkout) кода вашего репозитория
      # Этот шаг загружает код из вашего репозитория в рабочее окружение исполнителя (runner)
      - name: Checkout repository
        uses: actions/checkout@v4 # Используем готовое действие (action) 'actions/checkout' версии 4 для клонирования

      # Шаг 2: Настройка сборочного окружения
      # Здесь мы устанавливаем необходимые инструменты, такие как 'make' и компилятор 'gcc'
      - name: Set up build environment
        run: |
          sudo apt-get update # Обновляем список пакетов
          sudo apt-get install -y build-essential # Устанавливаем пакет 'build-essential', который содержит 'make', 'gcc', 'g++' и другие утилиты для сборки

      # Шаг 3: Сборка проекта
      - name: Build project
        run: make
